{
  "_args": [
    [
      {
        "raw": "rollem@git+https://github.com/PeculiarVentures/rollem.git",
        "scope": null,
        "escapedName": "rollem",
        "name": "rollem",
        "rawSpec": "git+https://github.com/PeculiarVentures/rollem.git",
        "spec": "git+https://github.com/PeculiarVentures/rollem.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:PeculiarVentures/rollem.git",
          "sshUrl": "git+ssh://git@github.com/PeculiarVentures/rollem.git",
          "httpsUrl": "git+https://github.com/PeculiarVentures/rollem.git",
          "gitUrl": "git://github.com/PeculiarVentures/rollem.git",
          "shortcut": "github:PeculiarVentures/rollem",
          "directUrl": "https://raw.githubusercontent.com/PeculiarVentures/rollem/master/package.json"
        }
      },
      "/home/cf/Development/idea-workspace/ejbca-new-ra/csr-client-fabric"
    ]
  ],
  "_from": "git+https://github.com/PeculiarVentures/rollem.git",
  "_id": "rollem@0.0.0-semantic-release",
  "_inCache": true,
  "_installable": true,
  "_location": "/rollem",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollem@git+https://github.com/PeculiarVentures/rollem.git",
    "scope": null,
    "escapedName": "rollem",
    "name": "rollem",
    "rawSpec": "git+https://github.com/PeculiarVentures/rollem.git",
    "spec": "git+https://github.com/PeculiarVentures/rollem.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:PeculiarVentures/rollem.git",
      "sshUrl": "git+ssh://git@github.com/PeculiarVentures/rollem.git",
      "httpsUrl": "git+https://github.com/PeculiarVentures/rollem.git",
      "gitUrl": "git://github.com/PeculiarVentures/rollem.git",
      "shortcut": "github:PeculiarVentures/rollem",
      "directUrl": "https://raw.githubusercontent.com/PeculiarVentures/rollem/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+https://github.com/PeculiarVentures/rollem.git#5447deb238da8f7f76618aa8ea82a62fc8858897",
  "_shasum": "d4e2cc1779b4ccb3e9e515d737cbc01a1a8e9efe",
  "_shrinkwrap": null,
  "_spec": "rollem@git+https://github.com/PeculiarVentures/rollem.git",
  "_where": "/home/cf/Development/idea-workspace/ejbca-new-ra/csr-client-fabric",
  "author": {
    "name": "Gleb Bahmutov",
    "email": "gleb.bahmutov@gmail.com"
  },
  "bin": {
    "rollem": "bin/rollem.js"
  },
  "bugs": {
    "url": "https://github.com/bahmutov/rollem/issues"
  },
  "config": {
    "pre-git": {
      "commit-msg": "simple",
      "pre-commit": [
        "npm run deps",
        "npm test",
        "npm run e2e",
        "npm run ban"
      ],
      "pre-push": [
        "npm run secure",
        "npm run license",
        "npm run ban -- --all",
        "npm run size"
      ],
      "post-commit": [],
      "post-merge": []
    }
  },
  "dependencies": {
    "debug": "2.2.0",
    "minimist": "1.2.0",
    "ramda": "0.21.0",
    "watch": "0.18.0"
  },
  "description": "Roll up multiple ES6 bundles at once",
  "devDependencies": {
    "ban-sensitive-files": "1.8.3",
    "check-more-types": "2.21.0",
    "deps-ok": "1.1.0",
    "git-issues": "1.2.0",
    "lazy-ass": "1.4.0",
    "license-checker": "5.1.2",
    "mocha": "2.5.3",
    "nsp": "2.4.0",
    "pre-git": "3.9.0",
    "rollup-plugin-node-resolve": "2.0.0",
    "semantic-release": "^4.3.5",
    "standard": "7.1.2",
    "standard-format": "2.2.1",
    "stop-build": "1.0.1"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "bin/*.js",
    "src/*.js",
    "!src/*-spec.js"
  ],
  "gitHead": "5447deb238da8f7f76618aa8ea82a62fc8858897",
  "homepage": "https://github.com/bahmutov/rollem#readme",
  "keywords": [
    "bundle",
    "es6",
    "roll",
    "rollup"
  ],
  "license": "MIT",
  "main": "src/",
  "name": "rollem",
  "noScopeName": "rollem",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "http://registry.npmjs.org/"
  },
  "readme": "# rollem\n\n> Roll up multiple ES6 bundles at once\n\n[![npm version](https://badge.fury.io/js/rollem.svg)](https://badge.fury.io/js/rollem)\n[![Build status][ci-image] ][ci-url]\n[![semantic-release][semantic-image] ][semantic-url]\n[![js-standard-style][standard-image]][standard-url]\n\n## Why?\n\n[Rollup](http://rollupjs.org/) is great, but\n[does not handle multiple bundles](https://github.com/rollup/rollup/issues/703)\nright out of the box. **Rollem** just handles a simple case\n\n```js\n// rollem.config.js\nmodule.exports = [{\n  entry: 'src/foo.js',\n  dest: 'dist/foo.js'\n}, {\n  entry: 'src/bar.js',\n  dest: 'dist/bar.js'\n}]\n```\n\nWhich builds two bundles `dist/foo.js` and `dist/bar.js` when you run\n`rollem`.\n\n## Install and use\n\n```text\nnpm install -D rollem\n// create rollem.config.js shown above\n// then set script command\n\"build\": \"rollem\"\n```\n\nYou can pass `--watch` option in the command to enable simple bundle rebuild\non changes.\n\nYou can pass `-c <filename>` to specify a different config file.\n\n## rollem.config.js\n\nAlmost the same syntax as [rollup.config.js](http://rollupjs.org/guide/#using-config-files)\nbut exports an Array. You can use JavaScript module to create the list of configs dynamically.\n\n```js\n// rollem.config.js with ES5\nconst configs = glob.sync('src/**/*-spec.js').map(toConfig)\nmodule.exports = configs\n```\n\n```js\n// rollem.config.js with ES6\nexport default [{\n  entry: 'src/foo.js',\n  dest: 'dist/foo.js'\n}, {\n  entry: 'src/child-folder/bar.js',\n  dest: 'dist/bar.js',\n  format: 'umd',\n  moduleName: 'bar',\n  sourceMap: 'inline'\n}]\n```\n\n## API\n\nIn addition to the simple command line, you can use **rollem** via its\nmodule API. It exports a single function\n\n```js\nconst rollem = require('rollem')\nrollem(configs, options)\n```\n\n* `configs` - simple Array of Rollup config objects\n* `options` - object with options, right now only `watch` property is\n  supported.\n\nThe `rollem(configs, options)` returns a Promise, resolved after the\nbundles have been built. The promise is resolved with the list of built files.\n\nIf you run `rollem(configs, {watch: true})` then the resolved Promise will\ngive you an event emitter. Every time there is a file change, you first\nwill get \"changed\" event, and after the bundles have been built you will\nget an event \"rolled\".\n\n```js\nrollem(configs, {watch: true})\n  .then((ee) => {\n    ee.on('changed', () => console.log('bundles will be rebuilt'))\n    ee.on('rolled', () => console.log('new bundles have been built'))\n  })\n```\n\nThe **rollem** in watch mode tries to determine the folder to watch from the source files.\nBecause it only knows about the top level entry file, it just grabs and watches\nthe top parent folders. For example, if entries specify `src/entry.js, src/foo/bar.js` then\nthe top parent folder watched will be `src`.\n\n## Debug\n\nIf something is wrong, run the tool with debug output enabled\n\n```sh\nDEBUG=rollem rollem\n```\n\n### Small print\n\nAuthor: Gleb Bahmutov &lt;gleb.bahmutov@gmail.com&gt; &copy; 2016\n\n\n* [@bahmutov](https://twitter.com/bahmutov)\n* [glebbahmutov.com](http://glebbahmutov.com)\n* [blog](http://glebbahmutov.com/blog)\n\n\nLicense: MIT - do anything with the code, but don't blame me if it does not work.\n\nSupport: if you find any problems with this module, email / tweet /\n[open issue](https://github.com/bahmutov/rollem/issues) on Github\n\n## MIT License\n\nCopyright (c) 2016 Gleb Bahmutov &lt;gleb.bahmutov@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n[npm-icon]: https://nodei.co/npm/rollem.svg?downloads=true\n[npm-url]: https://npmjs.org/package/rollem\n[ci-image]: https://travis-ci.org/bahmutov/rollem.svg?branch=master\n[ci-url]: https://travis-ci.org/bahmutov/rollem\n[semantic-image]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\n[semantic-url]: https://github.com/semantic-release/semantic-release\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: http://standardjs.com/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bahmutov/rollem.git"
  },
  "scripts": {
    "ban": "ban",
    "deps": "deps-ok",
    "e2e": "npm run test-default-es5 && npm run test-specified-es5 && npm run test-es6 && npm run test-plugins",
    "format": "standard-format -w bin/*.js src/*.js",
    "issues": "git-issues",
    "license": "license-checker --production --onlyunknown --csv",
    "lint": "standard --verbose bin/*.js src/*.js",
    "pretest": "npm run format && npm run lint",
    "secure": "nsp check",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "size": "t=\"$(npm pack .)\"; wc -c \"${t}\"; tar tvf \"${t}\"; rm \"${t}\";",
    "test": "npm run unit",
    "test-default-es5": "cd test/es5-config; npm test",
    "test-es6": "cd test/es6-config; npm test",
    "test-plugins": "cd test/with-plugins; npm test",
    "test-specified-es5": "cd test/specific-config; npm test",
    "unit": "mocha src/*-spec.js"
  },
  "version": "0.0.0-semantic-release"
}
