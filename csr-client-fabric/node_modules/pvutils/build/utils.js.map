{"version":3,"sources":["../src/utils.js"],"names":["getUTCDate","getParametersValue","bufferToHexCodes","checkBufferParams","utilFromBase","utilToBase","utilConcatBuf","utilDecodeTC","utilEncodeTC","isEqualBuffer","padNumber","toBase64","fromBase64","arrayBufferToString","stringToArrayBuffer","nearestPowerOf2","generatorsDriver","date","Date","getTime","getTimezoneOffset","parameters","name","defaultValue","Object","inputBuffer","inputOffset","inputLength","byteLength","result","Uint8Array","item","str","toString","toUpperCase","length","baseBlock","ArrayBuffer","error","inputBase","i","Math","pow","value","base","reserved","internalReserved","internalValue","biggest","retBuf","retView","j","basis","floor","outputLength","prevLength","buffers","buffer","set","buf","valueHex","condition1","condition2","warnings","push","bigIntBuffer","bigIntView","bigInt","smallIntBuffer","smallIntView","smallInt","modValue","tempBuf","slice","tempView","k","inputBuffer1","inputBuffer2","view1","view2","inputNumber","fullLength","dif","padding","Array","paddingString","join","concat","base64Template","base64UrlTemplate","input","useUrlTemplate","skipPadding","skipLeadingZeros","flag1","flag2","output","template","nonZeroPosition","charCodeAt","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charAt","cutTailZeros","indexof","toSearch","test","incoming","String","fromCharCode","nonZeroStart","resultString","view","element","stringLength","resultBuffer","resultView","log2","log","round","isGenerator","generator","next","throw","isGeneratorFunction","constructor","displayName","generatorInstance","Error","Promise","resolve","reject","onReject","ex","callback","generatorResult","done","then","driverResult"],"mappings":"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","file":"utils.js","sourcesContent":["//**************************************************************************************\r\n/**\r\n * Making UTC date from local date\r\n * @param {Date} date Date to convert from\r\n * @returns {Date}\r\n */\r\nexport function getUTCDate(date)\r\n{\r\n\treturn new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Get value for input parameters, or set a default value\r\n * @param {Object} parameters\r\n * @param {string} name\r\n * @param defaultValue\r\n */\r\nexport function getParametersValue(parameters, name, defaultValue)\r\n{\r\n\tif((parameters instanceof Object) === false)\r\n\t\treturn defaultValue;\r\n\t\r\n\tif(name in parameters)\r\n\t\treturn parameters[name];\r\n\t\r\n\treturn defaultValue;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Converts \"ArrayBuffer\" into a hexdecimal string\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} [inputOffset=0]\r\n * @param {number} [inputLength=inputBuffer.byteLength]\r\n * @returns {string}\r\n */\r\nexport function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = inputBuffer.byteLength)\r\n{\r\n\tlet result = \"\";\r\n\t\r\n\tfor(const item of (new Uint8Array(inputBuffer, inputOffset, inputLength)))\r\n\t{\r\n\t\tconst str = item.toString(16).toUpperCase();\r\n\t\tresult = result + ((str.length === 1) ? \"0\" : \"\") + str;\r\n\t}\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Check input \"ArrayBuffer\" for common functions\r\n * @param {LocalBaseBlock} baseBlock\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} inputOffset\r\n * @param {number} inputLength\r\n * @returns {boolean}\r\n */\r\nexport function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)\r\n{\r\n\tif((inputBuffer instanceof ArrayBuffer) === false)\r\n\t{\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(inputOffset < 0)\r\n\t{\r\n\t\tbaseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(inputLength < 0)\r\n\t{\r\n\t\tbaseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif((inputBuffer.byteLength - inputOffset - inputLength) < 0)\r\n\t{\r\n\t\tbaseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Convert number from 2^base to 2^10\r\n * @param {Uint8Array} inputBuffer\r\n * @param {number} inputBase\r\n * @returns {number}\r\n */\r\nexport function utilFromBase(inputBuffer, inputBase)\r\n{\r\n\tlet result = 0;\r\n\t\r\n\tfor(let i = (inputBuffer.length - 1); i >= 0; i--)\r\n\t\tresult += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Convert number from 2^10 to 2^base\r\n * @param {!number} value The number to convert\r\n * @param {!number} base The base for 2^base\r\n * @param {number} [reserved=0] Pre-defined number of bytes in output array (-1 = limited by function itself)\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilToBase(value, base, reserved = 0)\r\n{\r\n\tconst internalReserved = reserved || (-1);\r\n\tlet internalValue = value;\r\n\t\r\n\tlet result = 0;\r\n\tlet biggest = Math.pow(2, base);\r\n\t\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(value < biggest)\r\n\t\t{\r\n\t\t\tlet retBuf;\r\n\t\t\t\r\n\t\t\tif(internalReserved < 0)\r\n\t\t\t{\r\n\t\t\t\tretBuf = new ArrayBuffer(i);\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(internalReserved < i)\r\n\t\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(internalReserved);\r\n\t\t\t\t\r\n\t\t\t\tresult = internalReserved;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\tfor(let j = (i - 1); j >= 0; j--)\r\n\t\t\t{\r\n\t\t\t\tconst basis = Math.pow(2, j * base);\r\n\t\t\t\t\r\n\t\t\t\tretView[result - j - 1] = Math.floor(internalValue / basis);\r\n\t\t\t\tinternalValue -= (retView[result - j - 1]) * basis;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbiggest *= Math.pow(2, base);\r\n\t}\r\n\t\r\n\treturn new ArrayBuffer(0);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Concatenate two ArrayBuffers\r\n * @param {...ArrayBuffer} buffers First ArrayBuffer (first part of concatenated array)\r\n */\r\nexport function utilConcatBuf(...buffers)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t\toutputLength += buffer.byteLength;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t{\r\n\t\tretView.set(new Uint8Array(buffer), prevLength);\r\n\t\tprevLength += buffer.byteLength;\r\n\t}\r\n\t\r\n\treturn retBuf;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Decoding of \"two complement\" values\r\n * The function must be called in scope of instance of \"hexBlock\" class (\"valueHex\" and \"warnings\" properties must be present)\r\n * @returns {number}\r\n */\r\nexport function utilDecodeTC()\r\n{\r\n\tconst buf = new Uint8Array(this.valueHex);\r\n\t\r\n\tif(this.valueHex.byteLength >= 2)\r\n\t{\r\n\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\tconst condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n\t\tconst condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n\t\t\r\n\t\tif(condition1 || condition2)\r\n\t\t\tthis.warnings.push(\"Needlessly long format\");\r\n\t}\r\n\t\r\n\t//region Create big part of the integer\r\n\tconst bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst bigIntView = new Uint8Array(bigIntBuffer);\r\n\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\tbigIntView[i] = 0;\r\n\t\r\n\tbigIntView[0] = (buf[0] & 0x80); // mask only the biggest bit\r\n\t\r\n\tconst bigInt = utilFromBase(bigIntView, 8);\r\n\t//endregion\r\n\t\r\n\t//region Create small part of the integer\r\n\tconst smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst smallIntView = new Uint8Array(smallIntBuffer);\r\n\tfor(let j = 0; j < this.valueHex.byteLength; j++)\r\n\t\tsmallIntView[j] = buf[j];\r\n\t\r\n\tsmallIntView[0] &= 0x7F; // mask biggest bit\r\n\t\r\n\tconst smallInt = utilFromBase(smallIntView, 8);\r\n\t//endregion\r\n\t\r\n\treturn (smallInt - bigInt);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Encode integer value to \"two complement\" format\r\n * @param {number} value Value to encode\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilEncodeTC(value)\r\n{\r\n\tconst modValue = (value < 0) ? (value * (-1)) : value;\r\n\tlet bigInt = 128;\r\n\t\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(modValue <= bigInt)\r\n\t\t{\r\n\t\t\tif(value < 0)\r\n\t\t\t{\r\n\t\t\t\tconst smallInt = bigInt - modValue;\r\n\t\t\t\t\r\n\t\t\t\tconst retBuf = utilToBase(smallInt, 8, i);\r\n\t\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\tretView[0] |= 0x80;\r\n\t\t\t\t\r\n\t\t\t\treturn retBuf;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet retBuf = utilToBase(modValue, 8, i);\r\n\t\t\tlet retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\t\tif(retView[0] & 0x80)\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t\t\tconst tempBuf = retBuf.slice(0);\r\n\t\t\t\tconst tempView = new Uint8Array(tempBuf);\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\tfor(let k = 0; k < tempBuf.byteLength; k++)\r\n\t\t\t\t\tretView[k + 1] = tempView[k];\r\n\t\t\t\t\r\n\t\t\t\tretView[0] = 0x00;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbigInt *= Math.pow(2, 8);\r\n\t}\r\n\t\r\n\treturn (new ArrayBuffer(0));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Compare two array buffers\r\n * @param {!ArrayBuffer} inputBuffer1\r\n * @param {!ArrayBuffer} inputBuffer2\r\n * @returns {boolean}\r\n */\r\nexport function isEqualBuffer(inputBuffer1, inputBuffer2)\r\n{\r\n\tif(inputBuffer1.byteLength !== inputBuffer2.byteLength)\r\n\t\treturn false;\r\n\t\r\n\tconst view1 = new Uint8Array(inputBuffer1);\r\n\tconst view2 = new Uint8Array(inputBuffer2);\r\n\t\r\n\tfor(let i = 0; i < view1.length; i++)\r\n\t{\r\n\t\tif(view1[i] !== view2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Pad input number with leade \"0\" if needed\r\n * @returns {string}\r\n * @param {number} inputNumber\r\n * @param {number} fullLength\r\n */\r\nexport function padNumber(inputNumber, fullLength)\r\n{\r\n\tconst str = inputNumber.toString(10);\r\n\tconst dif = fullLength - str.length;\r\n\t\r\n\tconst padding = new Array(dif);\r\n\tfor(let i = 0; i < dif; i++)\r\n\t\tpadding[i] = \"0\";\r\n\t\r\n\tconst paddingString = padding.join(\"\");\r\n\t\r\n\treturn paddingString.concat(str);\r\n}\r\n//**************************************************************************************\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\n//**************************************************************************************\r\n/**\r\n * Encode string into BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} useUrlTemplate If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} skipPadding Skip BASE-64 padding or not\r\n * @param {boolean} skipLeadingZeros Skip leading zeros in input data or not\r\n * @returns {string}\r\n */\r\nexport function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false)\r\n{\r\n\tlet i = 0;\r\n\t\r\n\tlet flag1 = 0;\r\n\tlet flag2 = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\tif(skipLeadingZeros)\r\n\t{\r\n\t\tlet nonZeroPosition = 0;\r\n\t\t\r\n\t\tfor(let i = 0; i < input.length; i++)\r\n\t\t{\r\n\t\t\tif(input.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroPosition = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tinput = input.slice(nonZeroPosition);\r\n\t}\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\tconst chr1 = input.charCodeAt(i++);\r\n\t\tif(i >= input.length)\r\n\t\t\tflag1 = 1;\r\n\t\tconst chr2 = input.charCodeAt(i++);\r\n\t\tif(i >= input.length)\r\n\t\t\tflag2 = 1;\r\n\t\tconst chr3 = input.charCodeAt(i++);\r\n\t\t\r\n\t\tconst enc1 = chr1 >> 2;\r\n\t\tconst enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n\t\tlet enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n\t\tlet enc4 = chr3 & 0x3F;\r\n\t\t\r\n\t\tif(flag1 === 1)\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(flag2 === 1)\r\n\t\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\t\r\n\t\tif(skipPadding)\r\n\t\t{\r\n\t\t\tif(enc3 === 64)\r\n\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(enc4 === 64)\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Decode string from BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} [useUrlTemplate=false] If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} [cutTailZeros=false] If \"true\" then cut tailing zeroz from function result\r\n * @returns {string}\r\n */\r\nexport function fromBase64(input, useUrlTemplate = false, cutTailZeros = false)\r\n{\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\t//region Aux functions\r\n\tfunction indexof(toSearch)\r\n\t{\r\n\t\tfor(let i = 0; i < 64; i++)\r\n\t\t{\r\n\t\t\tif(template.charAt(i) === toSearch)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\t\r\n\t\treturn 64;\r\n\t}\r\n\t\r\n\tfunction test(incoming)\r\n\t{\r\n\t\treturn ((incoming === 64) ? 0x00 : incoming);\r\n\t}\r\n\t//endregion\r\n\t\r\n\tlet i = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\tconst enc1 = indexof(input.charAt(i++));\r\n\t\tconst enc2 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\tconst enc3 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\tconst enc4 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t\r\n\t\tconst chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n\t\tconst chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n\t\tconst chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n\t\t\r\n\t\toutput += String.fromCharCode(chr1);\r\n\t\t\r\n\t\tif(enc3 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr2);\r\n\t\t\r\n\t\tif(enc4 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr3);\r\n\t}\r\n\t\r\n\tif(cutTailZeros)\r\n\t{\r\n\t\tconst outputLength = output.length;\r\n\t\tlet nonZeroStart = (-1);\r\n\t\t\r\n\t\tfor(let i = (outputLength - 1); i >= 0; i--)\r\n\t\t{\r\n\t\t\tif(output.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroStart = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(nonZeroStart !== (-1))\r\n\t\t\toutput = output.slice(0, nonZeroStart + 1);\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\nexport function arrayBufferToString(buffer)\r\n{\r\n\tlet resultString = \"\";\r\n\tconst view = new Uint8Array(buffer);\r\n\t\r\n\tfor(const element of view)\r\n\t\tresultString = resultString + String.fromCharCode(element);\r\n\t\r\n\treturn resultString;\r\n}\r\n//**************************************************************************************\r\nexport function stringToArrayBuffer(str)\r\n{\r\n\tconst stringLength = str.length;\r\n\t\r\n\tconst resultBuffer = new ArrayBuffer(stringLength);\r\n\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\r\n\tfor(let i = 0; i < stringLength; i++)\r\n\t\tresultView[i] = str.charCodeAt(i);\r\n\t\r\n\treturn resultBuffer;\r\n}\r\n//**************************************************************************************\r\nconst log2 = Math.log(2);\r\n//**************************************************************************************\r\n/**\r\n * Get nearest to input length power of 2\r\n * @param {number} length Current length of existing array\r\n * @returns {number}\r\n */\r\nexport function nearestPowerOf2(length)\r\n{\r\n\tconst base = (Math.log(length) / log2);\r\n\t\r\n\tconst floor = Math.floor(base);\r\n\tconst round = Math.round(base);\r\n\t\r\n\treturn ((floor === round) ? floor : round);\r\n}\r\n//**************************************************************************************\r\n//region GeneratorDriver's related functions\r\n//**************************************************************************************\r\nconst isGenerator = generator =>\r\n{\r\n\tif(typeof generator === \"undefined\")\r\n\t\treturn false;\r\n\t\r\n\treturn ((typeof generator.next === \"function\") && (typeof generator.throw === \"function\"));\r\n};\r\n//**************************************************************************************\r\nconst isGeneratorFunction = generator =>\r\n{\r\n\tif(typeof generator === \"undefined\")\r\n\t\treturn false;\r\n\t\r\n\tconst constructor = generator.constructor;\r\n\t\r\n\tif(!constructor)\r\n\t\treturn false;\r\n\t\r\n\tif((constructor.name === \"GeneratorFunction\") || (constructor.displayName === \"GeneratorFunction\"))\r\n\t\treturn true;\r\n\t\r\n\treturn isGenerator(generator);\r\n};\r\n//**************************************************************************************\r\n/**\r\n * Simple \"generator's driver\" inspired by \"https://github.com/tj/co\".\r\n * @param {Generator|GeneratorFunction} generatorInstance\r\n * @returns {Promise}\r\n */\r\nexport function generatorsDriver(generatorInstance)\r\n{\r\n\t//region Check that we do have instance of \"Generator\" as input\r\n\tif(!isGenerator(generatorInstance))\r\n\t{\r\n\t\tif(isGeneratorFunction(generatorInstance))\r\n\t\t\tgeneratorInstance = generatorInstance();\r\n\t\telse\r\n\t\t\tthrow new Error(\"Only generator instance of generator function is a valid input\");\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\t/**\r\n\t\t * Driver function called on \"reject\" status in Promises\r\n\t\t * @param {*} error\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\tconst onReject = error =>\r\n\t\t{\r\n\t\t\tlet result;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tresult = generatorInstance.throw(error);\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\treturn reject(ex);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn callback(result);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Main driver function\r\n\t\t * @param {*} [result]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\tconst callback = result =>\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type Object\r\n\t\t\t * @property {boolean} done\r\n\t\t\t * @property {*} value\r\n\t\t\t */\r\n\t\t\tlet generatorResult;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tgeneratorResult = generatorInstance.next(result);\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\treturn reject(ex);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch(true)\r\n\t\t\t{\r\n\t\t\t\tcase (generatorResult.value instanceof Promise):\r\n\t\t\t\t\treturn ((generatorResult.done) ? resolve(generatorResult.value) : generatorResult.value.then(callback, onReject));\r\n\t\t\t\tcase isGeneratorFunction(generatorResult.value):\r\n\t\t\t\tcase isGenerator(generatorResult.value):\r\n\t\t\t\t\treturn ((generatorResult.done) ? generatorsDriver(generatorResult.value).then(driverResult =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresolve(driverResult);\r\n\t\t\t\t\t\t}, onReject) : generatorsDriver(generatorResult.value).then(callback, onReject));\r\n\t\t\t\tcase (typeof generatorResult.value === \"function\"):\r\n\t\t\t\t\tgeneratorResult.value = generatorResult.value();\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn (generatorResult.done) ? resolve(generatorResult.value) : callback(generatorResult.value);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tcallback();\r\n\t});\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n"]}